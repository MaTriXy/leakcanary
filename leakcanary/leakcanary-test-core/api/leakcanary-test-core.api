public final class leakcanary/TestDescriptionHolder : org/junit/rules/TestRule {
	public static final field INSTANCE Lleakcanary/TestDescriptionHolder;
	public fun apply (Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
	public final fun getTestDescription ()Lorg/junit/runner/Description;
	public final fun isEvaluating ()Z
	public final fun wrap (Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
}

public final class leakcanary/TestHeapDumpFileProvider : leakcanary/HeapDumpFileProvider {
	public fun <init> (Lleakcanary/HeapDumpDirectoryProvider;)V
	public fun newHeapDumpFile ()Ljava/io/File;
}

public abstract interface class leakcanary/TestName {
	public abstract fun getClassName ()Ljava/lang/String;
	public abstract fun getClassSimpleName ()Ljava/lang/String;
	public abstract fun getMethodName ()Ljava/lang/String;
}

public final class leakcanary/TestName$FromStackTraceElement : leakcanary/TestName {
	public fun <init> (Ljava/lang/StackTraceElement;)V
	public fun getClassName ()Ljava/lang/String;
	public fun getClassSimpleName ()Ljava/lang/String;
	public fun getMethodName ()Ljava/lang/String;
}

public final class leakcanary/TestName$FromTestDescription : leakcanary/TestName {
	public fun <init> (Lorg/junit/runner/Description;)V
	public fun getClassName ()Ljava/lang/String;
	public fun getClassSimpleName ()Ljava/lang/String;
	public fun getMethodName ()Ljava/lang/String;
}

public final class leakcanary/TestNameProvider {
	public static final field INSTANCE Lleakcanary/TestNameProvider;
	public final fun currentTestName ()Lleakcanary/TestName;
}

